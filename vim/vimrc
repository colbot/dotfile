" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
"if has('mouse')
"  set mouse=a
"endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

" --------------custom content ----------------

" display line number
set nu
set wrap
set nobackup
" tab and indent width
set ts=4
set sw=4
set sts=4
" use space instead of tab
" set expandtab
" autoread when a file is changed in outside
set autoread
" Automatically save before commands like :next and :make
set autowrite
" smartcase in search 
set smartcase
" set ignorecase
" show the match 
set showmatch
set cindent
set hlsearch
" Color setting
" set t_Co=16
"colorscheme evening

" remove the windows ^M
" noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm
" auto complete the 
inoremap ( ()<ESC>i
inoremap ) <c-r>=ClosePair(')')<CR>
"inoremap { {}<ESC>i
"inoremap } <c-r>=ClosePair('}')<CR>
inoremap [ []<ESC>i
inoremap ] <c-r>=ClosePair(']')<CR>
 
function ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
		return "\<Right>"
	else
		return a:char
	endif
endf

" switch paste mode
set pastetoggle=<F3>

" use Ctrl+<Arrow> to jump between window
nmap <C-Left>   <C-w>h
imap <C-Left>   <ESC><C-w>hi
nmap <C-Down>   <C-w>j
imap <C-Down>   <ESC><C-w>ji
nmap <C-Up>     <C-w>k
imap <C-Up>     <ESC><C-w>ki
nmap <C-Right>  <C-w>l
imap <C-Right>  <ESC><C-w>li

" use Alt-<Arrow> to change windows width and height
nmap <A-Up>     <C-w>+
imap <A-Up>     <ESC><C-w>+i
nmap <A-Down>   <C-w>-
imap <A-Down>   <ESC><C-w>-i
nmap <A-Left>   <C-w><
imap <A-Left>   <ESC><C-w><i
nmap <A-Right>  <C-w>>
imap <A-Right>  <ESC><C-w>>i

" remap va as vertical all
noremap va :vertical all<CR>
" remap sb as scrollbind
noremap sb :windo set scrollbind<CR>
" remap sb as noscrollbind
noremap nsb :windo set noscrollbind<CR>

" cvim file type bind
" let g:C_Styles = { '*.c,*.h,*.C' : 'C', '*.cc,*.cpp,*.CPP,*.c++,*.hh' : 'CPP' }
" set <F7> to open TagList
nmap <F7> :Tlist<CR>

" -------------- Source explorer setting -------------------
" The switch of the Source Explorer
"nmap <F8> :SrcExplToggle<CR>
" Set "Enter" key to jump into the exact definition context
"let g:SrcExpl_jumpKey = "<ENTER>"
" Set "Space" key for back from the definition context
"let g:SrcExpl_gobackKey = "<SPACE>"
" Do not let the Source Explorer update the tags file when opening
"let g:SrcExpl_isUpdateTags = 0
" Set "<F5>" key for updating the tags file artificially
"let g:SrcExpl_updateTagsKey = "<F5>"

" Java Browser setting
"nnoremap <silent> <F6> :JavaBrowser<CR>
"let JavaBrowser_Use_Right_Window = 1
"let JavaBrowser_Display_Prototype = 1

set colorcolumn=80
